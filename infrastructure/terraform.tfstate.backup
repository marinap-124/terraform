{
  "version": 4,
  "terraform_version": "0.12.23",
  "serial": 167,
  "lineage": "e342b9e2-1206-602a-9648-45498ba4a34b",
  "outputs": {},
  "resources": [
    {
      "module": "module.pipeline",
      "mode": "data",
      "type": "template_file",
      "name": "codebuild_policy",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "f667be8f763330a8328873670e96fd099da09b355f028240995b6bc87bd84508",
            "rendered": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n      {\n        \"Effect\": \"Allow\",\n        \"Resource\": [\n          \"*\"\n        ],\n        \"Action\": [\n          \"logs:CreateLogGroup\",\n          \"logs:CreateLogStream\",\n          \"logs:PutLogEvents\",\n          \"ecr:GetAuthorizationToken\",\n          \"ecr:InitiateLayerUpload\",\n          \"ecr:UploadLayerPart\",\n          \"ecr:CompleteLayerUpload\",\n          \"ecr:BatchCheckLayerAvailability\",\n          \"ecr:PutImage\",\n          \"ecs:RunTask\",\n          \"iam:PassRole\",\n          \"secretsmanager:GetSecretValue\",\n          \"ssm:GetParameters\"\n        ]\n      },\n      {\n        \"Effect\":\"Allow\",\n        \"Action\": [\n          \"s3:GetObject\",\n          \"s3:GetObjectVersion\",\n          \"s3:GetBucketVersioning\",\n          \"s3:List*\",\n          \"s3:PutObject\"\n        ],\n        \"Resource\": [\n          \"arn:aws:s3:::marina-codepipeline-2\",\n          \"arn:aws:s3:::marina-codepipeline-2/*\"\n        ]\n      }\n    ]\n  }",
            "template": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n      {\n        \"Effect\": \"Allow\",\n        \"Resource\": [\n          \"*\"\n        ],\n        \"Action\": [\n          \"logs:CreateLogGroup\",\n          \"logs:CreateLogStream\",\n          \"logs:PutLogEvents\",\n          \"ecr:GetAuthorizationToken\",\n          \"ecr:InitiateLayerUpload\",\n          \"ecr:UploadLayerPart\",\n          \"ecr:CompleteLayerUpload\",\n          \"ecr:BatchCheckLayerAvailability\",\n          \"ecr:PutImage\",\n          \"ecs:RunTask\",\n          \"iam:PassRole\",\n          \"secretsmanager:GetSecretValue\",\n          \"ssm:GetParameters\"\n        ]\n      },\n      {\n        \"Effect\":\"Allow\",\n        \"Action\": [\n          \"s3:GetObject\",\n          \"s3:GetObjectVersion\",\n          \"s3:GetBucketVersioning\",\n          \"s3:List*\",\n          \"s3:PutObject\"\n        ],\n        \"Resource\": [\n          \"${aws_s3_bucket_arn}\",\n          \"${aws_s3_bucket_arn}/*\"\n        ]\n      }\n    ]\n  }",
            "vars": {
              "aws_s3_bucket_arn": "arn:aws:s3:::marina-codepipeline-2"
            }
          }
        }
      ]
    },
    {
      "module": "module.pipeline",
      "mode": "managed",
      "type": "aws_codebuild_project",
      "name": "project",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:codebuild:us-east-2:032834519180:project/springboot-rds-appointment",
            "artifacts": [
              {
                "artifact_identifier": "",
                "encryption_disabled": false,
                "location": "",
                "name": "springboot-rds-appointment",
                "namespace_type": "",
                "override_artifact_name": false,
                "packaging": "ZIP",
                "path": "",
                "type": "CODEPIPELINE"
              }
            ],
            "badge_enabled": false,
            "badge_url": "",
            "build_timeout": 10,
            "cache": [
              {
                "location": "",
                "modes": [
                  "LOCAL_SOURCE_CACHE"
                ],
                "type": "LOCAL"
              }
            ],
            "description": "springboot-rds-appointment CodeBuild Project",
            "encryption_key": "arn:aws:kms:us-east-2:032834519180:alias/aws/s3",
            "environment": [
              {
                "certificate": "",
                "compute_type": "BUILD_GENERAL1_SMALL",
                "environment_variable": [],
                "image": "aws/codebuild/standard:1.0",
                "image_pull_credentials_type": "CODEBUILD",
                "privileged_mode": false,
                "registry_credential": [],
                "type": "LINUX_CONTAINER"
              }
            ],
            "id": "arn:aws:codebuild:us-east-2:032834519180:project/springboot-rds-appointment",
            "logs_config": [
              {
                "cloudwatch_logs": [
                  {
                    "group_name": "",
                    "status": "ENABLED",
                    "stream_name": ""
                  }
                ],
                "s3_logs": [
                  {
                    "encryption_disabled": false,
                    "location": "",
                    "status": "DISABLED"
                  }
                ]
              }
            ],
            "name": "springboot-rds-appointment",
            "queued_timeout": 480,
            "secondary_artifacts": [],
            "secondary_sources": [],
            "service_role": "arn:aws:iam::032834519180:role/codebuild-role",
            "source": [
              {
                "auth": [],
                "buildspec": "version: 0.2\n\nenv:\n  variables:\n    key: \"value\"\n\nphases:\n  install:\n    runtime-versions:\n      java: openjdk8\n    commands:\n      - apt-get update -y\n      - apt-get install -y maven\n      \n  build:\n    commands:\n      - echo Build started on `date`\n      - mvn test\n  pre_build:\n    commands:\n      - echo This is pre_build\n  build:\n    commands:\n      - echo Starting build `date`\n      - mvn clean package\n      - echo $CODEBUILD_SRC_DIR\n  post_build:\n    commands:\n      - echo Build completed on `date`\nartifacts:\n    base-directory: $CODEBUILD_SRC_DIR \n    files:\n      - target/springboot-rds-appointment-0.0.1-SNAPSHOT.jar   \n\n  \n",
                "git_clone_depth": null,
                "git_submodules_config": [],
                "insecure_ssl": null,
                "location": "",
                "report_build_status": null,
                "type": "CODEPIPELINE"
              }
            ],
            "source_version": "",
            "tags": null,
            "vpc_config": []
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.pipeline.aws_iam_role.codebuild_role"
          ]
        }
      ]
    },
    {
      "module": "module.pipeline",
      "mode": "managed",
      "type": "aws_codepipeline",
      "name": "codepipeline",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:codepipeline:us-east-2:032834519180:marina-test-pipeline",
            "artifact_store": [
              {
                "encryption_key": [],
                "location": "marina-codepipeline-1",
                "type": "S3"
              }
            ],
            "id": "marina-test-pipeline",
            "name": "marina-test-pipeline",
            "role_arn": "arn:aws:iam::032834519180:role/marina-pipeline-role-1",
            "stage": [
              {
                "action": [
                  {
                    "category": "Source",
                    "configuration": {
                      "Branch": "master",
                      "Owner": "marinap-124",
                      "PollForSourceChanges": "false",
                      "Repo": "springboot-rds-appointment"
                    },
                    "input_artifacts": null,
                    "name": "Source",
                    "output_artifacts": [
                      "source_output"
                    ],
                    "owner": "ThirdParty",
                    "provider": "GitHub",
                    "role_arn": "",
                    "run_order": 1,
                    "version": "1"
                  }
                ],
                "name": "Source"
              },
              {
                "action": [
                  {
                    "category": "Build",
                    "configuration": {
                      "ProjectName": "springboot-rds-appointment"
                    },
                    "input_artifacts": [
                      "source_output"
                    ],
                    "name": "Build",
                    "output_artifacts": [
                      "build_output"
                    ],
                    "owner": "AWS",
                    "provider": "CodeBuild",
                    "role_arn": "",
                    "run_order": 1,
                    "version": "1"
                  }
                ],
                "name": "Build"
              },
              {
                "action": [
                  {
                    "category": "Deploy",
                    "configuration": {
                      "ActionMode": "REPLACE_ON_FAILURE",
                      "Capabilities": "CAPABILITY_AUTO_EXPAND,CAPABILITY_IAM",
                      "OutputFileName": "CreateStackOutput.json",
                      "RoleArn": "arn:aws:iam::032834519180:role/codebuild-role",
                      "StackName": "MyStack",
                      "TemplatePath": "build_output::sam-templated.yaml"
                    },
                    "input_artifacts": [
                      "build_output"
                    ],
                    "name": "Deploy",
                    "output_artifacts": null,
                    "owner": "AWS",
                    "provider": "CloudFormation",
                    "role_arn": "",
                    "run_order": 1,
                    "version": "1"
                  }
                ],
                "name": "Deploy"
              }
            ],
            "tags": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.pipeline.aws_iam_role.codebuild_role",
            "module.pipeline.aws_iam_role.codepipeline_role",
            "module.pipeline.aws_s3_bucket.codepipeline_bucket"
          ]
        }
      ]
    },
    {
      "module": "module.rds-db",
      "mode": "managed",
      "type": "aws_db_instance",
      "name": "rds_db",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "address": "terraform-20200327055853562600000001.c3d61i5u2o6r.us-east-2.rds.amazonaws.com",
            "allocated_storage": 10,
            "allow_major_version_upgrade": null,
            "apply_immediately": null,
            "arn": "arn:aws:rds:us-east-2:032834519180:db:terraform-20200327055853562600000001",
            "auto_minor_version_upgrade": true,
            "availability_zone": "us-east-2a",
            "backup_retention_period": 0,
            "backup_window": "06:25-06:55",
            "ca_cert_identifier": "rds-ca-2019",
            "character_set_name": null,
            "copy_tags_to_snapshot": false,
            "db_subnet_group_name": "default",
            "delete_automated_backups": true,
            "deletion_protection": false,
            "domain": "",
            "domain_iam_role_name": "",
            "enabled_cloudwatch_logs_exports": null,
            "endpoint": "terraform-20200327055853562600000001.c3d61i5u2o6r.us-east-2.rds.amazonaws.com:3306",
            "engine": "mysql",
            "engine_version": "5.7.22",
            "final_snapshot_identifier": "rds-backup",
            "hosted_zone_id": "Z2XHWR1WZ565X2",
            "iam_database_authentication_enabled": false,
            "id": "terraform-20200327055853562600000001",
            "identifier": "terraform-20200327055853562600000001",
            "identifier_prefix": null,
            "instance_class": "db.t2.micro",
            "iops": 0,
            "kms_key_id": "",
            "license_model": "general-public-license",
            "maintenance_window": "thu:08:49-thu:09:19",
            "max_allocated_storage": 15,
            "monitoring_interval": 0,
            "monitoring_role_arn": "",
            "multi_az": false,
            "name": "db_appointment",
            "option_group_name": "default:mysql-5-7",
            "parameter_group_name": "default.mysql5.7",
            "password": "kex12456",
            "performance_insights_enabled": false,
            "performance_insights_kms_key_id": "",
            "performance_insights_retention_period": 0,
            "port": 3306,
            "publicly_accessible": false,
            "replicas": [],
            "replicate_source_db": "",
            "resource_id": "db-UTPC6UQFS3LMUJMWZUHNAXGOMQ",
            "s3_import": [],
            "security_group_names": null,
            "skip_final_snapshot": false,
            "snapshot_identifier": null,
            "status": "available",
            "storage_encrypted": false,
            "storage_type": "gp2",
            "tags": null,
            "timeouts": null,
            "timezone": "",
            "username": "root",
            "vpc_security_group_ids": [
              "sg-14f09972"
            ]
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAwLCJkZWxldGUiOjI0MDAwMDAwMDAwMDAsInVwZGF0ZSI6NDgwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9"
        }
      ]
    },
    {
      "module": "module.pipeline",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "codebuild_role",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::032834519180:role/codebuild-role",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"codebuild.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2020-03-27T05:58:54Z",
            "description": "",
            "force_detach_policies": false,
            "id": "codebuild-role",
            "max_session_duration": 3600,
            "name": "codebuild-role",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": null,
            "tags": null,
            "unique_id": "AROAQPJIXACGAUW7Y2NVJ"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.pipeline",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "codebuild_role_1",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::032834519180:role/codebuild-role_1",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"codebuild.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2020-03-27T05:58:54Z",
            "description": "",
            "force_detach_policies": false,
            "id": "codebuild-role_1",
            "max_session_duration": 3600,
            "name": "codebuild-role_1",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": null,
            "tags": {
              "Environment": "default",
              "Terraform": "true"
            },
            "unique_id": "AROAQPJIXACGOAPBVE3UT"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.pipeline",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "codepipeline_role",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::032834519180:role/marina-pipeline-role-1",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"codepipeline.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2020-03-27T05:58:54Z",
            "description": "",
            "force_detach_policies": false,
            "id": "marina-pipeline-role-1",
            "max_session_duration": 3600,
            "name": "marina-pipeline-role-1",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": null,
            "tags": null,
            "unique_id": "AROAQPJIXACGC4ZHWBZHP"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.pipeline",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "codebuild_policy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "codebuild-role:codebuild-policy",
            "name": "codebuild-policy",
            "name_prefix": null,
            "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n      {\n        \"Effect\": \"Allow\",\n        \"Resource\": [\n          \"*\"\n        ],\n        \"Action\": [\n          \"logs:CreateLogGroup\",\n          \"logs:CreateLogStream\",\n          \"logs:PutLogEvents\",\n          \"ecr:GetAuthorizationToken\",\n          \"ecr:InitiateLayerUpload\",\n          \"ecr:UploadLayerPart\",\n          \"ecr:CompleteLayerUpload\",\n          \"ecr:BatchCheckLayerAvailability\",\n          \"ecr:PutImage\",\n          \"ecs:RunTask\",\n          \"iam:PassRole\",\n          \"secretsmanager:GetSecretValue\",\n          \"ssm:GetParameters\"\n        ]\n      },\n      {\n        \"Effect\":\"Allow\",\n        \"Action\": [\n          \"s3:GetObject\",\n          \"s3:GetObjectVersion\",\n          \"s3:GetBucketVersioning\",\n          \"s3:List*\",\n          \"s3:PutObject\"\n        ],\n        \"Resource\": [\n          \"arn:aws:s3:::marina-codepipeline-2\",\n          \"arn:aws:s3:::marina-codepipeline-2/*\",\n          \"arn:aws:s3:::marina-codepipeline-1\",\n          \"arn:aws:s3:::marina-codepipeline-1/*\"\n        ]\n      }\n    ] \n}\n",
            "role": "codebuild-role"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.pipeline.aws_iam_role.codebuild_role",
            "module.pipeline.aws_s3_bucket.codepipeline_bucket",
            "module.pipeline.aws_s3_bucket.target"
          ]
        }
      ]
    },
    {
      "module": "module.pipeline",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "codebuild_policy_1",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "codebuild-role:codebuild-policy_1",
            "name": "codebuild-policy_1",
            "name_prefix": null,
            "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n      {\n        \"Effect\": \"Allow\",\n        \"Resource\": [\n          \"*\"\n        ],\n        \"Action\": [\n          \"logs:CreateLogGroup\",\n          \"logs:CreateLogStream\",\n          \"logs:PutLogEvents\",\n          \"ecr:GetAuthorizationToken\",\n          \"ecr:InitiateLayerUpload\",\n          \"ecr:UploadLayerPart\",\n          \"ecr:CompleteLayerUpload\",\n          \"ecr:BatchCheckLayerAvailability\",\n          \"ecr:PutImage\",\n          \"ecs:RunTask\",\n          \"iam:PassRole\",\n          \"secretsmanager:GetSecretValue\",\n          \"ssm:GetParameters\"\n        ]\n      },\n      {\n        \"Effect\":\"Allow\",\n        \"Action\": [\n          \"s3:GetObject\",\n          \"s3:GetObjectVersion\",\n          \"s3:GetBucketVersioning\",\n          \"s3:List*\",\n          \"s3:PutObject\"\n        ],\n        \"Resource\": [\n          \"arn:aws:s3:::marina-codepipeline-2\",\n          \"arn:aws:s3:::marina-codepipeline-2/*\"\n        ]\n      }\n    ]\n  }",
            "role": "codebuild-role"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.pipeline.aws_iam_role.codebuild_role",
            "module.pipeline.aws_s3_bucket.target"
          ]
        }
      ]
    },
    {
      "module": "module.pipeline",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "codepipeline_policy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "marina-pipeline-role-1:codepipeline_policy",
            "name": "codepipeline_policy",
            "name_prefix": null,
            "policy": "{\n    \"Statement\": [\n        {\n            \"Action\": [\n                \"iam:PassRole\"\n            ],\n            \"Resource\": \"*\",\n            \"Effect\": \"Allow\",\n            \"Condition\": {\n                \"StringEqualsIfExists\": {\n                    \"iam:PassedToService\": [\n                        \"cloudformation.amazonaws.com\",\n                        \"elasticbeanstalk.amazonaws.com\",\n                        \"ec2.amazonaws.com\",\n                        \"ecs-tasks.amazonaws.com\"\n                    ]\n                }\n            }\n        },\n        {\n            \"Action\": [\n                \"codecommit:CancelUploadArchive\",\n                \"codecommit:GetBranch\",\n                \"codecommit:GetCommit\",\n                \"codecommit:GetUploadArchiveStatus\",\n                \"codecommit:UploadArchive\"\n            ],\n            \"Resource\": \"*\",\n            \"Effect\": \"Allow\"\n        },\n        {\n            \"Action\": [\n                \"codedeploy:CreateDeployment\",\n                \"codedeploy:GetApplication\",\n                \"codedeploy:GetApplicationRevision\",\n                \"codedeploy:GetDeployment\",\n                \"codedeploy:GetDeploymentConfig\",\n                \"codedeploy:RegisterApplicationRevision\"\n            ],\n            \"Resource\": \"*\",\n            \"Effect\": \"Allow\"\n        },\n        {\n            \"Action\": [\n                \"codestar-connections:UseConnection\"\n            ],\n            \"Resource\": \"*\",\n            \"Effect\": \"Allow\"\n        },\n        {\n            \"Action\": [\n                \"elasticbeanstalk:*\",\n                \"ec2:*\",\n                \"elasticloadbalancing:*\",\n                \"autoscaling:*\",\n                \"cloudwatch:*\",\n                \"s3:*\",\n                \"sns:*\",\n                \"cloudformation:*\",\n                \"rds:*\",\n                \"sqs:*\",\n                \"ecs:*\"\n            ],\n            \"Resource\": \"*\",\n            \"Effect\": \"Allow\"\n        },\n        {\n            \"Action\": [\n                \"lambda:InvokeFunction\",\n                \"lambda:ListFunctions\"\n            ],\n            \"Resource\": \"*\",\n            \"Effect\": \"Allow\"\n        },\n        {\n            \"Action\": [\n                \"opsworks:CreateDeployment\",\n                \"opsworks:DescribeApps\",\n                \"opsworks:DescribeCommands\",\n                \"opsworks:DescribeDeployments\",\n                \"opsworks:DescribeInstances\",\n                \"opsworks:DescribeStacks\",\n                \"opsworks:UpdateApp\",\n                \"opsworks:UpdateStack\"\n            ],\n            \"Resource\": \"*\",\n            \"Effect\": \"Allow\"\n        },\n        {\n            \"Action\": [\n                \"cloudformation:CreateStack\",\n                \"cloudformation:DeleteStack\",\n                \"cloudformation:DescribeStacks\",\n                \"cloudformation:UpdateStack\",\n                \"cloudformation:CreateChangeSet\",\n                \"cloudformation:DeleteChangeSet\",\n                \"cloudformation:DescribeChangeSet\",\n                \"cloudformation:ExecuteChangeSet\",\n                \"cloudformation:SetStackPolicy\",\n                \"cloudformation:ValidateTemplate\"\n            ],\n            \"Resource\": \"*\",\n            \"Effect\": \"Allow\"\n        },\n        {\n            \"Action\": [\n                \"codebuild:BatchGetBuilds\",\n                \"codebuild:StartBuild\"\n            ],\n            \"Resource\": \"*\",\n            \"Effect\": \"Allow\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"devicefarm:ListProjects\",\n                \"devicefarm:ListDevicePools\",\n                \"devicefarm:GetRun\",\n                \"devicefarm:GetUpload\",\n                \"devicefarm:CreateUpload\",\n                \"devicefarm:ScheduleRun\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"servicecatalog:ListProvisioningArtifacts\",\n                \"servicecatalog:CreateProvisioningArtifact\",\n                \"servicecatalog:DescribeProvisioningArtifact\",\n                \"servicecatalog:DeleteProvisioningArtifact\",\n                \"servicecatalog:UpdateProduct\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"cloudformation:ValidateTemplate\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ecr:DescribeImages\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ],\n    \"Version\": \"2012-10-17\"\n}\n",
            "role": "marina-pipeline-role-1"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.pipeline.aws_iam_role.codepipeline_role"
          ]
        }
      ]
    },
    {
      "module": "module.pipeline",
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "codepipeline_bucket",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acceleration_status": "",
            "acl": "private",
            "arn": "arn:aws:s3:::marina-codepipeline-1",
            "bucket": "marina-codepipeline-1",
            "bucket_domain_name": "marina-codepipeline-1.s3.amazonaws.com",
            "bucket_prefix": null,
            "bucket_regional_domain_name": "marina-codepipeline-1.s3.us-east-2.amazonaws.com",
            "cors_rule": [],
            "force_destroy": false,
            "grant": [],
            "hosted_zone_id": "Z2O1EMRO9K5GLX",
            "id": "marina-codepipeline-1",
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "policy": null,
            "region": "us-east-2",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [],
            "tags": null,
            "versioning": [
              {
                "enabled": false,
                "mfa_delete": false
              }
            ],
            "website": [],
            "website_domain": null,
            "website_endpoint": null
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.pipeline",
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "target",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acceleration_status": "",
            "acl": "private",
            "arn": "arn:aws:s3:::marina-codepipeline-2",
            "bucket": "marina-codepipeline-2",
            "bucket_domain_name": "marina-codepipeline-2.s3.amazonaws.com",
            "bucket_prefix": null,
            "bucket_regional_domain_name": "marina-codepipeline-2.s3.us-east-2.amazonaws.com",
            "cors_rule": [],
            "force_destroy": true,
            "grant": [],
            "hosted_zone_id": "Z2O1EMRO9K5GLX",
            "id": "marina-codepipeline-2",
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "policy": null,
            "region": "us-east-2",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [],
            "tags": {
              "Environment": "default",
              "Terraform": "true"
            },
            "versioning": [
              {
                "enabled": false,
                "mfa_delete": false
              }
            ],
            "website": [],
            "website_domain": null,
            "website_endpoint": null
          },
          "private": "bnVsbA=="
        }
      ]
    }
  ]
}
